generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model guildConfig {
  id              String    @id @default(uuid()) @map("_id")
  guildId         BigInt    @unique
  prefix          String    @default("?")
  pannel_count    Int       @default(0)
  tickets_created Int       @default(0)
  pannels         Pannels[]
  tickets         tickets[]
}

model Pannels {
  id           String       @id @default(uuid()) @map("_id")
  guildConfig  guildConfig? @relation(fields: [guildId], references: [guildId])
  guildId      BigInt?
  channel      BigInt
  pannelId     BigInt?
  admins       BigInt[]
  supportRoles BigInt[]
}

model PannelConfig {
  id             String  @id @default(uuid()) @map("_id")
  pannel_message String  @default("click here to open a ticket")
  button_style   String  @default("primary")
  button_label   String  @default("ðŸŽ« Click Here")
  category       BigInt  @unique
  ticket_message String?
}

model TicketConfig {
  id      String    @id @default(uuid()) @map("_id")
  tickets tickets[]
}

model tickets {
  id              String        @id @default(uuid()) @map("_id")
  guildConfig     guildConfig?  @relation(fields: [guildId], references: [guildId])
  guildId         BigInt?
  pannelId        BigInt?
  ticketId        BigInt?
  ticketConfig    TicketConfig? @relation(fields: [ticketConfigId], references: [id])
  ticket          String
  ticketStatus    String
  ticketOwner     BigInt
  ticketAdmins    BigInt[]
  ticketClosed    Boolean
  ticketClosedBy  BigInt?
  ticketClosedAt  DateTime?
  ticketCreatedAt DateTime?
  ticketUpdatedAt DateTime?
  ticketConfigId  String?
  transcriptUrl   String?
}
