[
    {
        "label": "discord",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "discord",
        "description": "discord",
        "detail": "discord",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "logging.config",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging.config",
        "description": "logging.config",
        "detail": "logging.config",
        "documentation": {}
    },
    {
        "label": "colorlog",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "colorlog",
        "description": "colorlog",
        "detail": "colorlog",
        "documentation": {}
    },
    {
        "label": "colors",
        "importPath": "tools.ansi_configs",
        "description": "tools.ansi_configs",
        "isExtraImport": true,
        "detail": "tools.ansi_configs",
        "documentation": {}
    },
    {
        "label": "Bot",
        "kind": 6,
        "importPath": "src.core.bot",
        "description": "src.core.bot",
        "peekOfCode": "class Bot(commands.AutoShardedBot):\n    def __init__(self):\n        super().__init__(\n            command_prefix='?',\n            intents=intents,\n        )",
        "detail": "src.core.bot",
        "documentation": {}
    },
    {
        "label": "intents",
        "kind": 5,
        "importPath": "src.core.bot",
        "description": "src.core.bot",
        "peekOfCode": "intents = discord.Intents.all()\nintents.presences = False\nclass Bot(commands.AutoShardedBot):\n    def __init__(self):\n        super().__init__(\n            command_prefix='?',\n            intents=intents,\n        )",
        "detail": "src.core.bot",
        "documentation": {}
    },
    {
        "label": "intents.presences",
        "kind": 5,
        "importPath": "src.core.bot",
        "description": "src.core.bot",
        "peekOfCode": "intents.presences = False\nclass Bot(commands.AutoShardedBot):\n    def __init__(self):\n        super().__init__(\n            command_prefix='?',\n            intents=intents,\n        )",
        "detail": "src.core.bot",
        "documentation": {}
    },
    {
        "label": "colors",
        "kind": 5,
        "importPath": "src.tools.ansi_configs",
        "description": "src.tools.ansi_configs",
        "peekOfCode": "colors = {\n    'DEBUG': '\\033[37m',\n    'INFO': '\\033[32m',\n    'WARNING': '\\033[33m',\n    'ERROR': '\\033[31m',\n    'CRITICAL': '\\033[41m\\033[37m',\n}",
        "detail": "src.tools.ansi_configs",
        "documentation": {}
    },
    {
        "label": "CustomColoredFormatter",
        "kind": 6,
        "importPath": "src.utils.logger",
        "description": "src.utils.logger",
        "peekOfCode": "class CustomColoredFormatter(colorlog.ColoredFormatter):\n    def format(self, record):\n        record.levelname_log_color = COLORS.get(record.levelname, '\\033[0m')  # Default to no color\n        record.asctime_log_color = '\\033[34m'\n        record.name_log_color = '\\033[36m'\n        record.message_log_color = '\\033[37m'\n        record.reset = '\\033[0m'\n        return super(CustomColoredFormatter, self).format(record)\nlog_config = {\n    'version': 1,",
        "detail": "src.utils.logger",
        "documentation": {}
    },
    {
        "label": "get_logger",
        "kind": 2,
        "importPath": "src.utils.logger",
        "description": "src.utils.logger",
        "peekOfCode": "def get_logger(name: str):\n    return logging.getLogger(name)",
        "detail": "src.utils.logger",
        "documentation": {}
    },
    {
        "label": "log_directory",
        "kind": 5,
        "importPath": "src.utils.logger",
        "description": "src.utils.logger",
        "peekOfCode": "log_directory = 'logs'\nif not os.path.exists(log_directory):\n    os.makedirs(log_directory)\nlog_format = (\n    '%(levelname_log_color)s%(levelname)s%(reset)s : '\n    '%(asctime_log_color)s%(asctime)s%(reset)s - '\n    '%(name_log_color)s%(name)s%(reset)s : '\n    '%(message_log_color)s%(message)s%(reset)s'\n)\nclass CustomColoredFormatter(colorlog.ColoredFormatter):",
        "detail": "src.utils.logger",
        "documentation": {}
    },
    {
        "label": "log_format",
        "kind": 5,
        "importPath": "src.utils.logger",
        "description": "src.utils.logger",
        "peekOfCode": "log_format = (\n    '%(levelname_log_color)s%(levelname)s%(reset)s : '\n    '%(asctime_log_color)s%(asctime)s%(reset)s - '\n    '%(name_log_color)s%(name)s%(reset)s : '\n    '%(message_log_color)s%(message)s%(reset)s'\n)\nclass CustomColoredFormatter(colorlog.ColoredFormatter):\n    def format(self, record):\n        record.levelname_log_color = COLORS.get(record.levelname, '\\033[0m')  # Default to no color\n        record.asctime_log_color = '\\033[34m'",
        "detail": "src.utils.logger",
        "documentation": {}
    },
    {
        "label": "log_config",
        "kind": 5,
        "importPath": "src.utils.logger",
        "description": "src.utils.logger",
        "peekOfCode": "log_config = {\n    'version': 1,\n    'disable_existing_loggers': False,\n    'formatters': {\n        'standard': {\n            'format': '%(levelname)s : %(asctime)s - %(name)s : %(message)s',\n        },\n        'colored': {\n            '()': CustomColoredFormatter,\n            'format': log_format,",
        "detail": "src.utils.logger",
        "documentation": {}
    }
]